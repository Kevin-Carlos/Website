{
  "version": 3,
  "sources": ["/Users/kevin/Documents/Projects/snowpack-site/src/pages/projects/flashcards/flashcards.tsx"],
  "sourcesContent": ["import React, { FC, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronLeft, ChevronRight } from \"common/ui-elements/icons\";\nimport { Section } from \"common/sections/section\";\nimport { useRecoilValue } from \"recoil\";\nimport { flashcardState } from \"state/flashcards\";\nimport { FlashcardInputs } from \"./form/flashcard-inputs\";\n\ntype CardSide = \"front\" | \"back\";\n\nexport const Flashcards: FC = ({}) => {\n  const [index, setIndex] = useState(0);\n  const [sideOfCard, setSideOfCard] = useState<{ idx: number; side: CardSide }>(\n    {\n      idx: index,\n      side: \"front\",\n    },\n  );\n  const cards = useRecoilValue(flashcardState);\n  const updateIndex = (v: number) => setIndex(v);\n\n  // Always show the front to not reveal the \"answer\"\n  useEffect(() => {\n    setSideOfCard({\n      idx: index,\n      side: \"front\",\n    });\n  }, [index]);\n\n  return (\n    <Section isFirst>\n      <h1>Flashcards</h1>\n      <CardWrapper>\n        <StyledChevronLeft\n          // Extra check just to ensure no crash happens\n          onClick={() => {\n            if (index === 0) {\n              return;\n            }\n\n            setIndex(index - 1);\n          }}\n          shouldHide={index === 0}\n        />\n        <Flashcard\n          onClick={() =>\n            /* Flip card */\n            setSideOfCard({\n              idx: index,\n              side: sideOfCard.side === \"front\" ? \"back\" : \"front\",\n            })\n          }\n          side={sideOfCard.side}\n        >\n          <p style={{ userSelect: \"none\" }}>\n            {cards.length ? (\n              sideOfCard.side === \"front\" ? (\n                cards[index].subject\n              ) : (\n                <>\n                  {cards[index].description.includes(\"http\") ? (\n                    <a href={cards[index].description} target=\"_blank\">\n                      {cards[index].description}\n                    </a>\n                  ) : (\n                    cards[index].description\n                  )}\n                </>\n              )\n            ) : (\n              []\n            )}\n          </p>\n        </Flashcard>\n        <StyledChevronRight\n          onClick={() => {\n            // Extra check just to ensure no crash happens\n            if (index === cards.length - 1) {\n              return;\n            }\n\n            setIndex(index + 1);\n          }}\n          shouldHide={index === cards.length - 1 || !cards.length}\n        />\n      </CardWrapper>\n      <InputWrapper>\n        <FlashcardInputs cardIndex={index} setIndex={updateIndex} />\n      </InputWrapper>\n    </Section>\n  );\n};\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n`;\n\nconst Flashcard = styled.div<{ side: CardSide }>`\n  width: 30rem;\n  height: 20rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${({ theme }) => theme.colors.white};\n\n  border: 1px solid ${({ theme }) => theme.colors.light_gray};\n  box-shadow: -2px 2px 5px rgba(255, 255, 255, 0.1);\n  text-align: center;\n  word-wrap: break-word;\n  white-space: initial;\n  cursor: pointer;\n\n  & a {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n\n  ${({ theme }) => theme.mediaQuery.tablet} {\n    width: 50rem;\n    height: 30rem;\n  }\n\n  ${({ side }) =>\n    side === \"back\" &&\n    `\n      background-image: linear-gradient(to bottom,\n          #ffffff 15%,\n          #F94545 16%,\n          #ffffff 16%,\n          #ffffff 25%,\n          #85b2d3 26%,\n          #ffffff 26%,\n          #ffffff 35%,\n          #85b2d3 36%,\n          #ffffff 36%,\n          #ffffff 45%,\n          #85b2d3 46%,\n          #ffffff 46%,\n          #ffffff 55%,\n          #85b2d3 56%,\n          #ffffff 56%,\n          #ffffff 65%,\n          #85b2d3 66%,\n          #ffffff 66%,\n          #ffffff 75%,\n          #85b2d3 76%,\n          #ffffff 76%,\n          #ffffff 85%,\n          #85b2d3 86%,\n          #ffffff 86%,\n          #ffffff 95%,\n          #85b2d3 96%,\n          #ffffff 96%\n      );\n    `};\n`;\n\nconst StyledChevronRight = styled(ChevronRight)<{ shouldHide: boolean }>`\n  ${({ shouldHide }) =>\n    shouldHide &&\n    `\n    opacity: 0;\n    pointer-events: none;\n    cursor: normal;\n  `};\n`;\n\nconst StyledChevronLeft = styled(ChevronLeft)<{ shouldHide: boolean }>`\n  ${({ shouldHide }) =>\n    shouldHide &&\n    `\n    opacity: 0;\n    pointer-events: none;\n    cursor: normal;\n  `};\n`;\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIO,aAAM,aAAiB;AAC5B,4BAA0B,SAAS;AACnC,sCAAoC,SAClC;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA;AAGV,gBAAc,eAAe;AAC7B,sBAAoB,OAAe,SAAS;AAG5C,YAAU;AACR,kBAAc;AAAA,MACZ,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,KAEP,CAAC;AAEJ,SACE,oCAAC,SAAD;AAAA,IAAS,SAAO;AAAA,KACd,oCAAC,MAAD,MAAI,eACJ,oCAAC,aAAD,MACE,oCAAC,mBAAD;AAAA,IAEE,SAAS;AACP,UAAI,UAAU;AACZ;AAAA;AAGF,eAAS,QAAQ;AAAA;AAAA,IAEnB,YAAY,UAAU;AAAA,MAExB,oCAAC,WAAD;AAAA,IACE,SAAS,MAEP,cAAc;AAAA,MACZ,KAAK;AAAA,MACL,MAAM,WAAW,SAAS,UAAU,SAAS;AAAA;AAAA,IAGjD,MAAM,WAAW;AAAA,KAEjB,oCAAC,KAAD;AAAA,IAAG,OAAO,CAAE,YAAY;AAAA,KACrB,MAAM,SACL,WAAW,SAAS,UAClB,MAAM,OAAO,UAEb,0DACG,MAAM,OAAO,YAAY,SAAS,UACjC,oCAAC,KAAD;AAAA,IAAG,MAAM,MAAM,OAAO;AAAA,IAAa,QAAO;AAAA,KACvC,MAAM,OAAO,eAGhB,MAAM,OAAO,eAKnB,MAIN,oCAAC,oBAAD;AAAA,IACE,SAAS;AAEP,UAAI,UAAU,MAAM,SAAS;AAC3B;AAAA;AAGF,eAAS,QAAQ;AAAA;AAAA,IAEnB,YAAY,UAAU,MAAM,SAAS,KAAK,CAAC,MAAM;AAAA,OAGrD,oCAAC,cAAD,MACE,oCAAC,iBAAD;AAAA,IAAiB,WAAW;AAAA,IAAO,UAAU;AAAA;AAAA;AAMrD,qBAAqB,OAAO;AAAA;AAAA;AAAA;AAK5B,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3B,kBAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMT,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA,sBAEtB,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQrC,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA,IAGrC,EAAG,WAAY,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,IAKhC,EAAG,UACH,SAAS,UACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCJ,2BAA2B,OAAO;AAAA,IAC9B,EAAG,gBACH,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOJ,0BAA0B,OAAO;AAAA,IAC7B,EAAG,gBACH,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
