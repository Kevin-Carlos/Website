{
  "version": 3,
  "sources": ["/Users/kevin/Documents/Projects/snowpack-site/src/pages/about/about-me.tsx"],
  "sourcesContent": ["import React, { FC, useState } from \"react\";\nimport { Section } from \"common/sections/section\";\nimport styled from \"styled-components\";\nimport { ColorNames } from \"common/styles\";\nimport { animated, useTransition } from \"react-spring\";\nimport { ContentBlurb, BlurbType } from \"./content-blurbs\";\n\ntype AboutMeProps = {};\n\nexport const AboutMe: FC<AboutMeProps> = ({}) => {\n  const [headerType, setHeaderType] = useState<BlurbType>(\"about\");\n\n  const transitionedHeaderItems = useTransition(\n    circleItems,\n    (item) => item.key,\n    {\n      trail: 150,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" },\n    },\n  );\n\n  return (\n    <FullHeightSection>\n      <div>\n        <h1\n          style={{\n            textAlign: \"center\",\n            marginRight: \"6rem\",\n            textTransform: \"capitalize\",\n          }}\n        >\n          {headerType === \"about\" ? `About Me` : headerType}\n        </h1>\n        <CircleWrapper>\n          {transitionedHeaderItems.map(({ item, key, props }) => {\n            console.log(\"isActive\", item.key === headerType);\n            return (\n              <Circle\n                size={item.size}\n                color={item.color}\n                active={item.key === headerType}\n                key={key}\n                style={props}\n                onClick={() => setHeaderType(item.key)}\n              >\n                <CircleHeaders>{item.title}</CircleHeaders>\n              </Circle>\n            );\n          })}\n        </CircleWrapper>\n      </div>\n      <ContentBlurb type={headerType} />\n    </FullHeightSection>\n  );\n};\n\ntype ContentHeaderItemsT = {\n  size: number;\n  color: ColorNames;\n  title: string;\n  key: BlurbType;\n};\n\nconst circleItems: ContentHeaderItemsT[] = [\n  {\n    key: \"about\",\n    title: \"Who Am I?\",\n    size: 12,\n    color: \"light_teal\",\n  },\n  {\n    key: \"education\",\n    title: \"Education\",\n    size: 10,\n    color: \"orange\",\n  },\n  {\n    key: \"career\",\n    title: \"Career\",\n    size: 15,\n    color: \"blue\",\n  },\n];\n\nconst FullHeightSection = styled(Section)`\n  & > div {\n    min-height: calc(100vh - 24rem);\n    display: flex;\n    align-items: flex-start;\n    flex-direction: column;\n    padding-top: 4rem;\n\n    ${({ theme }) => theme.mediaQuery.laptop} {\n      align-items: center;\n      justify-content: space-between;\n      flex-direction: row;\n    }\n  }\n`;\n\nconst CircleWrapper = styled.ul`\n  display: flex;\n  margin-bottom: 2rem;\n\n  & > li:not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  ${({ theme }) => theme.mediaQuery.laptop} {\n    margin-bottom: unset;\n    margin-right: 4rem;\n  }\n`;\n\nconst Circle = styled(animated.li)<{\n  size: number;\n  color: ColorNames;\n  active: boolean;\n}>`\n  height: ${({ size }) => `${size}rem`};\n  width: ${({ size }) => `${size}rem`};\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  border-radius: 50%;\n  color: ${({ theme }) => theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition-property: scale3d;\n  transition-duration: 0.25s;\n  transition-timing-function: ease-in-out;\n\n  ${({ active }) =>\n    active &&\n    `\n    transform: scale3d(1.1, 1.1, 1) !important;\n  `};\n`;\n\nconst CircleHeaders = styled.h2`\n  font-size: 1.7rem;\n  margin: 0;\n`;\n"],
  "mappings": "AAAA;AACA;AACA;AAEA;AACA;AAIO,aAAM,UAA4B;AACvC,sCAAoC,SAAoB;AAExD,kCAAgC,cAC9B,aACA,UAAU,KAAK,KACf;AAAA,IACE,OAAO;AAAA,IACP,MAAM,CAAE,SAAS,GAAG,WAAW;AAAA,IAC/B,OAAO,CAAE,SAAS,GAAG,WAAW;AAAA,IAChC,OAAO,CAAE,SAAS,GAAG,WAAW;AAAA;AAIpC,SACE,oCAAC,mBAAD,MACE,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IACE,OAAO;AAAA,MACL,WAAW;AAAA,MACX,aAAa;AAAA,MACb,eAAe;AAAA;AAAA,KAGhB,eAAe,UAAU,aAAa,aAEzC,oCAAC,eAAD,MACG,wBAAwB,IAAI,EAAG,MAAM,KAAK;AACzC,YAAQ,IAAI,YAAY,KAAK,QAAQ;AACrC,WACE,oCAAC,QAAD;AAAA,MACE,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK,QAAQ;AAAA,MACrB;AAAA,MACA,OAAO;AAAA,MACP,SAAS,MAAM,cAAc,KAAK;AAAA,OAElC,oCAAC,eAAD,MAAgB,KAAK;AAAA,QAM/B,oCAAC,cAAD;AAAA,IAAc,MAAM;AAAA;AAAA;AAY1B,oBAA2C;AAAA,EACzC;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA;AAAA,EAET;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA;AAAA,EAET;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA;AAAA;AAIX,0BAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ3B,EAAG,WAAY,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtC,sBAAsB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQzB,EAAG,WAAY,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAMpC,eAAe,OAAO,SAAS;AAAA,YAKnB,EAAG,UAAW,GAAG;AAAA,WAClB,EAAG,UAAW,GAAG;AAAA,sBACN,EAAG,OAAO,WAAY,MAAM,OAAO;AAAA;AAAA,WAE9C,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASnC,EAAG,YACH,UACA;AAAA;AAAA;AAAA;AAKJ,sBAAsB,OAAO;AAAA;AAAA;AAAA;",
  "names": []
}
