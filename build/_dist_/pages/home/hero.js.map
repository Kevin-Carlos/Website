{
  "version": 3,
  "sources": ["/Users/kevin/Documents/Projects/snowpack-site/src/pages/home/hero.tsx"],
  "sourcesContent": ["import React, { FC, useRef, useState, useEffect } from \"react\";\nimport { lighten } from \"polished\";\nimport { animated, useTransition } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { hiItems } from \"./languages\";\nimport { Divider } from \"common/components\";\nimport { Link } from \"react-router-dom\";\nimport { links } from \"common/links\";\n\ntype HeroProps = {\n  className?: string;\n};\n\nexport const Hero: FC<HeroProps> = ({ className }) => {\n  const [index, setIndex] = useState(0);\n  const [length, setLength] = useState(hiItems[index].item.length);\n  const valueRef = useRef<HTMLSpanElement | null>(null);\n\n  const transitions = useTransition(hiItems[index], (hiItems) => hiItems.key, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: { tension: 60, friction: 10 },\n    unique: true,\n    reset: true,\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIndex((state) => (state + 1) % hiItems.length);\n    }, 1000 * 3.9);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    setLength(valueRef.current?.clientWidth || hiItems[index].item.length);\n  }, [index]);\n\n  return (\n    <Content>\n      <h1>\n        <span>\n          {transitions.map(({ item: language, props, key }) => {\n            return (\n              <animated.span\n                ref={valueRef}\n                key={key}\n                style={{ ...props, position: \"absolute\" }}\n              >\n                {language.item},\n              </animated.span>\n            );\n          })}\n          <Text length={length + 15}>I'm</Text>\n        </span>\n        <ColoredName>Kevin Carlos</ColoredName>\n      </h1>\n      <StyledDivider />\n      <div>\n        <Link to={links.aboutMe()}>\n          <AboutMeButton>About Me</AboutMeButton>\n        </Link>\n        <Link to={links.projects().root()}>\n          <ProjectsButton>Projects</ProjectsButton>\n        </Link>\n      </div>\n    </Content>\n  );\n};\n\nconst Content = styled.div`\n  width: 30rem;\n  position: fixed;\n  top: 50%;\n  left: 50vw;\n  transform: translate(-50%, -50%);\n  color: ${({ theme }) => theme.colors.white};\n\n  ${({ theme }) => theme.mediaQuery.tablet} {\n    left: 35vw;\n  }\n`;\n\nconst ColoredName = styled.p`\n  color: ${({ theme }) => lighten(0.15, theme.colors.light_teal)};\n`;\n\nconst Text = styled.span<{ length: number }>`\n  margin-left: ${({ length }) => `${length}px`};\n  transition: margin-left 500ms cubic-bezier(0.52, 0.095, 0.27, 0.895);\n`;\n\nconst StyledDivider = styled(Divider)`\n  margin-bottom: 3rem;\n`;\n\nconst StyledButton = styled.button`\n  font-family: \"Poppins\", sans-serif;\n  padding: 1rem 2rem;\n  border-radius: 2rem;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.light_teal};\n  color: ${({ theme }) => theme.colors.white} !important;\n  border-width: 0;\n  transition: background-color 0.25s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.dark_teal};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst AboutMeButton = styled(StyledButton)`\n  margin-right: 2.5rem;\n`;\n\nconst ProjectsButton = styled(StyledButton)`\n  background-color: ${({ theme }) => theme.colors.gray};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.blue};\n  }\n`;\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMO,aAAM,OAAsB,EAAG;AACpC,4BAA0B,SAAS;AACnC,8BAA4B,SAAS,QAAQ,OAAO,KAAK;AACzD,mBAAiB,OAA+B;AAEhD,sBAAoB,cAAc,QAAQ,QAAQ,cAAa,SAAQ,KAAK;AAAA,IAC1E,MAAM,CAAE,SAAS;AAAA,IACjB,OAAO,CAAE,SAAS;AAAA,IAClB,OAAO,CAAE,SAAS;AAAA,IAClB,QAAQ,CAAE,SAAS,IAAI,UAAU;AAAA,IACjC,QAAQ;AAAA,IACR,OAAO;AAAA;AAGT,YAAU;AACR,qBAAiB,YAAY;AAC3B,eAAS,WAAY,SAAQ,KAAK,QAAQ;AAAA,OACzC,MAAO;AAEV,WAAO,MAAM,cAAc;AAAA,KAC1B;AAEH,YAAU;AACR,cAAU,SAAS,SAAS,eAAe,QAAQ,OAAO,KAAK;AAAA,KAC9D,CAAC;AAEJ,SACE,oCAAC,SAAD,MACE,oCAAC,MAAD,MACE,oCAAC,QAAD,MACG,YAAY,IAAI,EAAG,gBAAgB,OAAO;AACzC,WACE,oCAAC,SAAS,MAAV;AAAA,MACE,KAAK;AAAA,MACL;AAAA,MACA,OAAO,IAAK,OAAO,UAAU;AAAA,OAE5B,SAAS,MAAK;AAAA,MAIrB,oCAAC,MAAD;AAAA,IAAM,QAAQ,SAAS;AAAA,KAAI,SAE7B,oCAAC,aAAD,MAAa,kBAEf,oCAAC,eAAD,OACA,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IAAM,IAAI,OAAM;AAAA,KACd,oCAAC,eAAD,MAAe,cAEjB,oCAAC,MAAD;AAAA,IAAM,IAAI,OAAM,WAAW;AAAA,KACzB,oCAAC,gBAAD,MAAgB;AAAA;AAO1B,gBAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMZ,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA,IAEnC,EAAG,WAAY,MAAM,WAAW;AAAA;AAAA;AAAA;AAKpC,oBAAoB,OAAO;AAAA,WAChB,EAAG,WAAY,QAAQ,MAAM,MAAM,OAAO;AAAA;AAGrD,aAAa,OAAO;AAAA,iBACH,EAAG,YAAa,GAAG;AAAA;AAAA;AAIpC,sBAAsB,OAAO;AAAA;AAAA;AAI7B,qBAAqB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKN,EAAG,WAAY,MAAM,OAAO;AAAA,WACvC,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKf,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQpD,sBAAsB,OAAO;AAAA;AAAA;AAI7B,uBAAuB,OAAO;AAAA,sBACR,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;AAAA,wBAG1B,EAAG,WAAY,MAAM,OAAO;AAAA;AAAA;",
  "names": []
}
